# Generated by Django 5.2.1 on 2025-06-09 06:47

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('short_description', models.TextField(verbose_name='Краткое описание')),
                ('content', models.TextField(verbose_name='Содержание')),
                ('preview_image', models.ImageField(upload_to='articles/previews/', verbose_name='Изображение для анонса')),
                ('detail_image', models.ImageField(blank=True, null=True, upload_to='articles/details/', verbose_name='Детальное изображение')),
                ('publish_date', models.DateTimeField(verbose_name='Дата публикации')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовано')),
            ],
            options={
                'verbose_name': 'Статья',
                'verbose_name_plural': 'Статьи',
                'ordering': ['-publish_date'],
            },
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('description', models.TextField(verbose_name='Описание')),
                ('image_desktop', models.ImageField(upload_to='banners/desktop/', verbose_name='Изображение для десктопа')),
                ('image_tablet', models.ImageField(blank=True, null=True, upload_to='banners/tablet/', verbose_name='Изображение для планшета')),
                ('image_mobile', models.ImageField(blank=True, null=True, upload_to='banners/mobile/', verbose_name='Изображение для мобильного')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Баннер',
                'verbose_name_plural': 'Баннеры',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='BranchOfService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch', models.CharField(choices=[('ground', 'Сухопутные войска'), ('navy', 'Военно-морской флот'), ('air', 'Военно-воздушные силы'), ('pvo', 'Войска противовоздушной обороны'), ('border', 'Погранвойска'), ('nkvd', 'Войска НКВД'), ('medical', 'Военно-медицинская служба')], max_length=20, unique=True, verbose_name='Род войск')),
            ],
            options={
                'verbose_name': 'Род войск',
                'verbose_name_plural': 'Рода войск',
            },
        ),
        migrations.CreateModel(
            name='Conflict',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Конфликт',
                'verbose_name_plural': 'Конфликты',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('file', models.FileField(upload_to='documents/', verbose_name='Файл')),
                ('document_number', models.CharField(blank=True, max_length=100, verbose_name='Номер документа')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала действия')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания действия')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('upload_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата загрузки')),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Документы',
                'ordering': ['-upload_date'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('short_description', models.TextField(verbose_name='Краткое описание')),
                ('content', models.TextField(verbose_name='Содержание')),
                ('preview_image', models.ImageField(upload_to='events/previews/', verbose_name='Изображение для анонса')),
                ('detail_image', models.ImageField(blank=True, null=True, upload_to='events/details/', verbose_name='Детальное изображение')),
                ('start_date', models.DateTimeField(verbose_name='Дата и время начала')),
                ('end_date', models.DateTimeField(verbose_name='Дата и время окончания')),
                ('location', models.CharField(blank=True, max_length=255, verbose_name='Место проведения')),
                ('status', models.CharField(choices=[('planned', 'Запланировано'), ('in_progress', 'В процессе'), ('completed', 'Завершено')], default='planned', max_length=20, verbose_name='Статус')),
                ('format', models.CharField(choices=[('online', 'Онлайн'), ('offline', 'Оффлайн'), ('hybrid', 'Гибридный')], default='offline', max_length=10, verbose_name='Формат')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовано')),
            ],
            options={
                'verbose_name': 'Мероприятие',
                'verbose_name_plural': 'Мероприятия',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='MilitaryRank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.CharField(choices=[('private', 'Рядовой'), ('corporal', 'Ефрейтор'), ('mlsergeant', 'Мл.Сержант'), ('sergeant', 'Сержант'), ('stsergeant', 'Ст.Сержант'), ('pettyofficer', 'Старшина'), ('mllieutenant', 'Мл.Лейтенант'), ('lieutenant', 'Лейтенант'), ('stlieutenant', 'Ст.Лейтенант'), ('captain', 'Капитан'), ('major', 'Майор'), ('lieutenantcolonel', 'Подполковник'), ('colonel', 'Полковник'), ('majorgeneral', 'Генерал-майор'), ('lieutenantgeneral', 'Генерал-лейтенант'), ('colonelgeneral', 'Генерал-полковник'), ('armygeneral', 'Генерал армии'), ('marshal', 'Маршал')], max_length=20, unique=True, verbose_name='Звание')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='Порядок сортировки')),
            ],
            options={
                'verbose_name': 'Воинское звание',
                'verbose_name_plural': 'Воинские звания',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('short_description', models.TextField(verbose_name='Краткое описание')),
                ('content', models.TextField(verbose_name='Содержание')),
                ('preview_image', models.ImageField(upload_to='news/previews/', verbose_name='Изображение для анонса')),
                ('detail_image', models.ImageField(blank=True, null=True, upload_to='news/details/', verbose_name='Детальное изображение')),
                ('publish_date', models.DateTimeField(verbose_name='Дата публикации')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовано')),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
                'ordering': ['-publish_date'],
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('content', models.TextField(verbose_name='Содержание')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Страница',
                'verbose_name_plural': 'Страницы',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Награда',
                'verbose_name_plural': 'Награды',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Администратор'), ('moderator', 'Модератор'), ('user', 'Пользователь')], default='user', max_length=10, verbose_name='Роль')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Телефон')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Battle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('start_date', models.DateField(verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('conflict', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='memory_book_app.conflict', verbose_name='Конфликт')),
            ],
            options={
                'verbose_name': 'Сражение',
                'verbose_name_plural': 'Сражения',
            },
        ),
        migrations.CreateModel(
            name='LogEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Создание'), ('update', 'Обновление'), ('delete', 'Удаление'), ('login', 'Вход'), ('logout', 'Выход'), ('error', 'Ошибка')], max_length=10, verbose_name='Действие')),
                ('model', models.CharField(max_length=100, verbose_name='Модель')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='ID объекта')),
                ('details', models.TextField(blank=True, verbose_name='Детали')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP-адрес')),
                ('user_agent', models.CharField(blank=True, max_length=255, verbose_name='User Agent')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Время события')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='custom_log_entries', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Запись лога',
                'verbose_name_plural': 'Записи логов',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Veteran',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('middle_name', models.CharField(blank=True, max_length=100, verbose_name='Отчество')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('death_date', models.DateField(blank=True, null=True, verbose_name='Дата смерти')),
                ('biography', models.TextField(blank=True, verbose_name='Биография')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='veterans/photos/', verbose_name='Фотография')),
                ('veteran_type', models.CharField(choices=[('combat', 'Ветеран боевых действий'), ('homefront', 'Труженик тыла')], default='combat', max_length=10, verbose_name='Тип ветерана')),
                ('call_place', models.CharField(blank=True, max_length=255, verbose_name='Место призыва')),
                ('service_place', models.CharField(blank=True, max_length=255, verbose_name='Место службы')),
                ('military_unit', models.CharField(blank=True, max_length=255, verbose_name='Воинское формирование')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Одобрено')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('battles', models.ManyToManyField(blank=True, to='memory_book_app.battle', verbose_name='Сражения')),
                ('branch_of_service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='memory_book_app.branchofservice', verbose_name='Род войск')),
                ('conflict', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='memory_book_app.conflict', verbose_name='Конфликт')),
                ('military_rank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='memory_book_app.militaryrank', verbose_name='Воинское звание')),
            ],
            options={
                'verbose_name': 'Ветеран',
                'verbose_name_plural': 'Ветераны',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='VeteranReward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_number', models.CharField(blank=True, max_length=100, verbose_name='Номер наградного документа')),
                ('award_date', models.DateField(blank=True, null=True, verbose_name='Дата награждения')),
                ('reward', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='memory_book_app.reward', verbose_name='Награда')),
                ('veteran', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='memory_book_app.veteran', verbose_name='Ветеран')),
            ],
            options={
                'verbose_name': 'Награда ветерана',
                'verbose_name_plural': 'Награды ветеранов',
            },
        ),
        migrations.AddField(
            model_name='veteran',
            name='rewards',
            field=models.ManyToManyField(blank=True, through='memory_book_app.VeteranReward', to='memory_book_app.reward', verbose_name='Награды'),
        ),
    ]
